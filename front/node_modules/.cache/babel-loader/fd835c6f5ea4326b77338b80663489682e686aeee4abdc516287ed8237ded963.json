{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aayza\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\diplom\\\\front\\\\src\\\\components\\\\AudioRecorder.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onNewAudio\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        onNewAudio(audioUrl);\n        audioChunksRef.current = [];\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Ошибка доступа к микрофону:', err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-recorder\",\n    children: isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"stop-button\",\n      onClick: stopRecording,\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      onClick: startRecording,\n      children: \"\\u0417\\u0430\\u043F\\u0438\\u0441\\u0430\\u0442\\u044C \\u0433\\u043E\\u043B\\u043E\\u0441\\u043E\\u0432\\u043E\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"9vlr/drR7eRRS6Si05gDHrjPA2U=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nconst sendAudioToServer = async audioBlob => {\n  try {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n    const response = await fetch('http://localhost:8000/api/upload-audio', {\n      method: 'POST',\n      body: formData\n    });\n    const result = await response.json();\n    console.log('Аудио отправлено:', result);\n  } catch (error) {\n    console.error('Ошибка отправки:', error);\n  }\n};\n\n// В onstop после создания audioBlob:\nsendAudioToServer(audioBlob);\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","AudioRecorder","onNewAudio","_s","isRecording","setIsRecording","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","start","err","console","error","stopRecording","stop","getTracks","forEach","track","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","sendAudioToServer","formData","FormData","append","response","fetch","method","body","result","json","log","$RefreshReg$"],"sources":["C:/Users/aayza/OneDrive/Рабочий стол/diplom/front/src/components/AudioRecorder.js"],"sourcesContent":["import { useState, useRef } from 'react';\r\n\r\nconst AudioRecorder = ({ onNewAudio }) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const startRecording = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      mediaRecorderRef.current = new MediaRecorder(stream);\r\n      \r\n      mediaRecorderRef.current.ondataavailable = (event) => {\r\n        audioChunksRef.current.push(event.data);\r\n      };\r\n      \r\n      mediaRecorderRef.current.onstop = () => {\r\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\r\n        const audioUrl = URL.createObjectURL(audioBlob);\r\n        onNewAudio(audioUrl);\r\n        audioChunksRef.current = [];\r\n      };\r\n      \r\n      mediaRecorderRef.current.start();\r\n      setIsRecording(true);\r\n    } catch (err) {\r\n      console.error('Ошибка доступа к микрофону:', err);\r\n    }\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    if (mediaRecorderRef.current) {\r\n      mediaRecorderRef.current.stop();\r\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"audio-recorder\">\r\n      {isRecording ? (\r\n        <button className=\"stop-button\" onClick={stopRecording}>\r\n          Остановить запись\r\n        </button>\r\n      ) : (\r\n        <button className=\"start-button\" onClick={startRecording}>\r\n          Записать голосовое сообщение\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;\r\nconst sendAudioToServer = async (audioBlob) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('audio', audioBlob, 'recording.wav');\r\n      \r\n      const response = await fetch('http://localhost:8000/api/upload-audio', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      const result = await response.json();\r\n      console.log('Аудио отправлено:', result);\r\n    } catch (error) {\r\n      console.error('Ошибка отправки:', error);\r\n    }\r\n  };\r\n  \r\n  // В onstop после создания audioBlob:\r\n  sendAudioToServer(audioBlob);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}