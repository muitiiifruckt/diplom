{"ast":null,"code":"\"use strict\";\n\nfunction encodeSync(audioData, opts) {\n  opts = opts || {};\n  audioData = toAudioData(audioData);\n  if (audioData === null) {\n    throw new TypeError(\"Invalid AudioData\");\n  }\n  var floatingPoint = !!(opts.floatingPoint || opts.float);\n  var bitDepth = floatingPoint ? 32 : opts.bitDepth | 0 || 16;\n  var bytes = bitDepth >> 3;\n  var length = audioData.length * audioData.numberOfChannels * bytes;\n  var dataView = new DataView(new Uint8Array(44 + length).buffer);\n  var writer = createWriter(dataView);\n  var format = {\n    formatId: floatingPoint ? 0x0003 : 0x0001,\n    floatingPoint: floatingPoint,\n    numberOfChannels: audioData.numberOfChannels,\n    sampleRate: audioData.sampleRate,\n    bitDepth: bitDepth\n  };\n  writeHeader(writer, format, dataView.buffer.byteLength - 8);\n  var err = writeData(writer, format, length, audioData, opts);\n  if (err instanceof Error) {\n    throw err;\n  }\n  return dataView.buffer;\n}\nfunction encode(audioData, opts) {\n  return new Promise(function (resolve) {\n    resolve(encodeSync(audioData, opts));\n  });\n}\nfunction toAudioData(data) {\n  var audioData = {};\n  if (typeof data.sampleRate !== \"number\") {\n    return null;\n  }\n  if (!Array.isArray(data.channelData)) {\n    return null;\n  }\n  if (!(data.channelData[0] instanceof Float32Array)) {\n    return null;\n  }\n  audioData.numberOfChannels = data.channelData.length;\n  audioData.length = data.channelData[0].length | 0;\n  audioData.sampleRate = data.sampleRate | 0;\n  audioData.channelData = data.channelData;\n  return audioData;\n}\nfunction writeHeader(writer, format, length) {\n  var bytes = format.bitDepth >> 3;\n  writer.string(\"RIFF\");\n  writer.uint32(length);\n  writer.string(\"WAVE\");\n  writer.string(\"fmt \");\n  writer.uint32(16);\n  writer.uint16(format.floatingPoint ? 0x0003 : 0x0001);\n  writer.uint16(format.numberOfChannels);\n  writer.uint32(format.sampleRate);\n  writer.uint32(format.sampleRate * format.numberOfChannels * bytes);\n  writer.uint16(format.numberOfChannels * bytes);\n  writer.uint16(format.bitDepth);\n}\nfunction writeData(writer, format, length, audioData, opts) {\n  var bitDepth = format.bitDepth;\n  var encoderOption = format.floatingPoint ? \"f\" : opts.symmetric ? \"s\" : \"\";\n  var methodName = \"pcm\" + bitDepth + encoderOption;\n  if (!writer[methodName]) {\n    return new TypeError(\"Not supported bit depth: \" + bitDepth);\n  }\n  var write = writer[methodName].bind(writer);\n  var numberOfChannels = format.numberOfChannels;\n  var channelData = audioData.channelData;\n  writer.string(\"data\");\n  writer.uint32(length);\n  for (var i = 0, imax = audioData.length; i < imax; i++) {\n    for (var ch = 0; ch < numberOfChannels; ch++) {\n      write(channelData[ch][i]);\n    }\n  }\n}\nfunction createWriter(dataView) {\n  var pos = 0;\n  return {\n    int16: function (value) {\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    uint16: function (value) {\n      dataView.setUint16(pos, value, true);\n      pos += 2;\n    },\n    uint32: function (value) {\n      dataView.setUint32(pos, value, true);\n      pos += 4;\n    },\n    string: function (value) {\n      for (var i = 0, imax = value.length; i < imax; i++) {\n        dataView.setUint8(pos++, value.charCodeAt(i));\n      }\n    },\n    pcm8: function (value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = (value * 0.5 + 0.5) * 255;\n      value = Math.round(value) | 0;\n      dataView.setUint8(pos, value, true);\n      pos += 1;\n    },\n    pcm8s: function (value) {\n      value = Math.round(value * 128) + 128;\n      value = Math.max(0, Math.min(value, 255));\n      dataView.setUint8(pos, value, true);\n      pos += 1;\n    },\n    pcm16: function (value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? value * 32768 : value * 32767;\n      value = Math.round(value) | 0;\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    pcm16s: function (value) {\n      value = Math.round(value * 32768);\n      value = Math.max(-32768, Math.min(value, 32767));\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    pcm24: function (value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? 0x1000000 + value * 8388608 : value * 8388607;\n      value = Math.round(value) | 0;\n      var x0 = value >> 0 & 0xFF;\n      var x1 = value >> 8 & 0xFF;\n      var x2 = value >> 16 & 0xFF;\n      dataView.setUint8(pos + 0, x0);\n      dataView.setUint8(pos + 1, x1);\n      dataView.setUint8(pos + 2, x2);\n      pos += 3;\n    },\n    pcm24s: function (value) {\n      value = Math.round(value * 8388608);\n      value = Math.max(-8388608, Math.min(value, 8388607));\n      var x0 = value >> 0 & 0xFF;\n      var x1 = value >> 8 & 0xFF;\n      var x2 = value >> 16 & 0xFF;\n      dataView.setUint8(pos + 0, x0);\n      dataView.setUint8(pos + 1, x1);\n      dataView.setUint8(pos + 2, x2);\n      pos += 3;\n    },\n    pcm32: function (value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? value * 2147483648 : value * 2147483647;\n      value = Math.round(value) | 0;\n      dataView.setInt32(pos, value, true);\n      pos += 4;\n    },\n    pcm32s: function (value) {\n      value = Math.round(value * 2147483648);\n      value = Math.max(-2147483648, Math.min(value, +2147483647));\n      dataView.setInt32(pos, value, true);\n      pos += 4;\n    },\n    pcm32f: function (value) {\n      dataView.setFloat32(pos, value, true);\n      pos += 4;\n    }\n  };\n}\nmodule.exports.encode = encode;\nmodule.exports.encode.sync = encodeSync;","map":{"version":3,"names":["encodeSync","audioData","opts","toAudioData","TypeError","floatingPoint","float","bitDepth","bytes","length","numberOfChannels","dataView","DataView","Uint8Array","buffer","writer","createWriter","format","formatId","sampleRate","writeHeader","byteLength","err","writeData","Error","encode","Promise","resolve","data","Array","isArray","channelData","Float32Array","string","uint32","uint16","encoderOption","symmetric","methodName","write","bind","i","imax","ch","pos","int16","value","setInt16","setUint16","setUint32","setUint8","charCodeAt","pcm8","Math","max","min","round","pcm8s","pcm16","pcm16s","pcm24","x0","x1","x2","pcm24s","pcm32","setInt32","pcm32s","pcm32f","setFloat32","module","exports","sync"],"sources":["C:/Users/aayza/OneDrive/Рабочий стол/diplom/front/node_modules/wav-encoder/index.js"],"sourcesContent":["\"use strict\";\n\nfunction encodeSync(audioData, opts) {\n  opts = opts || {};\n\n  audioData = toAudioData(audioData);\n\n  if (audioData === null) {\n    throw new TypeError(\"Invalid AudioData\");\n  }\n\n  var floatingPoint = !!(opts.floatingPoint || opts.float);\n  var bitDepth = floatingPoint ? 32 : ((opts.bitDepth|0) || 16);\n  var bytes = bitDepth >> 3;\n  var length = audioData.length * audioData.numberOfChannels * bytes;\n  var dataView = new DataView(new Uint8Array(44 + length).buffer);\n  var writer = createWriter(dataView);\n\n  var format = {\n    formatId: floatingPoint ? 0x0003 : 0x0001,\n    floatingPoint: floatingPoint,\n    numberOfChannels: audioData.numberOfChannels,\n    sampleRate: audioData.sampleRate,\n    bitDepth: bitDepth\n  };\n\n  writeHeader(writer, format, dataView.buffer.byteLength - 8);\n\n  var err = writeData(writer, format, length, audioData, opts);\n\n  if (err instanceof Error) {\n    throw err;\n  }\n\n  return dataView.buffer;\n}\n\nfunction encode(audioData, opts) {\n  return new Promise(function(resolve) {\n    resolve(encodeSync(audioData, opts));\n  });\n}\n\nfunction toAudioData(data) {\n  var audioData = {};\n\n  if (typeof data.sampleRate !== \"number\") {\n    return null;\n  }\n  if (!Array.isArray(data.channelData)) {\n    return null;\n  }\n  if (!(data.channelData[0] instanceof Float32Array)) {\n    return null;\n  }\n\n  audioData.numberOfChannels = data.channelData.length;\n  audioData.length = data.channelData[0].length|0;\n  audioData.sampleRate = data.sampleRate|0;\n  audioData.channelData = data.channelData;\n\n  return audioData;\n}\n\nfunction writeHeader(writer, format, length) {\n  var bytes = format.bitDepth >> 3;\n\n  writer.string(\"RIFF\");\n  writer.uint32(length);\n  writer.string(\"WAVE\");\n\n  writer.string(\"fmt \");\n  writer.uint32(16);\n  writer.uint16(format.floatingPoint ? 0x0003 : 0x0001);\n  writer.uint16(format.numberOfChannels);\n  writer.uint32(format.sampleRate);\n  writer.uint32(format.sampleRate * format.numberOfChannels * bytes);\n  writer.uint16(format.numberOfChannels * bytes);\n  writer.uint16(format.bitDepth);\n}\n\nfunction writeData(writer, format, length, audioData, opts) {\n  var bitDepth = format.bitDepth;\n  var encoderOption = format.floatingPoint ? \"f\" : opts.symmetric ? \"s\" : \"\";\n  var methodName = \"pcm\" + bitDepth + encoderOption;\n\n  if (!writer[methodName]) {\n    return new TypeError(\"Not supported bit depth: \" + bitDepth);\n  }\n\n  var write = writer[methodName].bind(writer);\n  var numberOfChannels = format.numberOfChannels;\n  var channelData = audioData.channelData;\n\n  writer.string(\"data\");\n  writer.uint32(length);\n\n  for (var i = 0, imax = audioData.length; i < imax; i++) {\n    for (var ch = 0; ch < numberOfChannels; ch++) {\n      write(channelData[ch][i]);\n    }\n  }\n}\n\nfunction createWriter(dataView) {\n  var pos = 0;\n\n  return {\n    int16: function(value) {\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    uint16: function(value) {\n      dataView.setUint16(pos, value, true);\n      pos += 2;\n    },\n    uint32: function(value) {\n      dataView.setUint32(pos, value, true);\n      pos += 4;\n    },\n    string: function(value) {\n      for (var i = 0, imax = value.length; i < imax; i++) {\n        dataView.setUint8(pos++, value.charCodeAt(i));\n      }\n    },\n    pcm8: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = (value * 0.5 + 0.5) * 255;\n      value = Math.round(value)|0;\n      dataView.setUint8(pos, value, true);\n      pos += 1;\n    },\n    pcm8s: function(value) {\n      value = Math.round(value * 128) + 128;\n      value = Math.max(0, Math.min(value, 255));\n      dataView.setUint8(pos, value, true);\n      pos += 1;\n    },\n    pcm16: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? value * 32768 : value * 32767;\n      value = Math.round(value)|0;\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    pcm16s: function(value) {\n      value = Math.round(value * 32768);\n      value = Math.max(-32768, Math.min(value, 32767));\n      dataView.setInt16(pos, value, true);\n      pos += 2;\n    },\n    pcm24: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? 0x1000000 + value * 8388608 : value * 8388607;\n      value = Math.round(value)|0;\n\n      var x0 = (value >>  0) & 0xFF;\n      var x1 = (value >>  8) & 0xFF;\n      var x2 = (value >> 16) & 0xFF;\n\n      dataView.setUint8(pos + 0, x0);\n      dataView.setUint8(pos + 1, x1);\n      dataView.setUint8(pos + 2, x2);\n      pos += 3;\n    },\n    pcm24s: function(value) {\n      value = Math.round(value * 8388608);\n      value = Math.max(-8388608, Math.min(value, 8388607));\n\n      var x0 = (value >>  0) & 0xFF;\n      var x1 = (value >>  8) & 0xFF;\n      var x2 = (value >> 16) & 0xFF;\n\n      dataView.setUint8(pos + 0, x0);\n      dataView.setUint8(pos + 1, x1);\n      dataView.setUint8(pos + 2, x2);\n      pos += 3;\n    },\n    pcm32: function(value) {\n      value = Math.max(-1, Math.min(value, +1));\n      value = value < 0 ? value * 2147483648 : value * 2147483647;\n      value = Math.round(value)|0;\n      dataView.setInt32(pos, value, true);\n      pos += 4;\n    },\n    pcm32s: function(value) {\n      value = Math.round(value * 2147483648);\n      value = Math.max(-2147483648, Math.min(value, +2147483647));\n      dataView.setInt32(pos, value, true);\n      pos += 4;\n    },\n    pcm32f: function(value) {\n      dataView.setFloat32(pos, value, true);\n      pos += 4;\n    }\n  };\n}\n\nmodule.exports.encode = encode;\nmodule.exports.encode.sync = encodeSync;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}