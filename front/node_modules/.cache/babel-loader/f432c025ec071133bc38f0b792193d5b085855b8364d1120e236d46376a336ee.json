{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aayza\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\diplom\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AudioRecorder() {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [audioUrl, setAudioUrl] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      mediaRecorderRef.current.ondataavailable = event => {\n        audioChunksRef.current.push(event.data);\n      };\n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        setAudioBlob(audioBlob);\n        setAudioUrl(URL.createObjectURL(audioBlob));\n        audioChunksRef.current = [];\n      };\n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Error accessing microphone:', err);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  const sendAudioToServer = async () => {\n    if (!audioBlob) return;\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n    try {\n      const response = await fetch('http://localhost:8000/api/upload-audio', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Server response was not OK');\n      }\n      const result = await response.json();\n      console.log('Success:', result);\n      alert('Audio sent successfully!');\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to send audio');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Audio Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), audioUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: audioUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendAudioToServer,\n        children: \"Send Audio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(AudioRecorder, \"Tfw5ilhmjpl7zeTxxczjVFUonmA=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["useState","useRef","useEffect","jsxDEV","_jsxDEV","AudioRecorder","_s","isRecording","setIsRecording","audioBlob","setAudioBlob","audioUrl","setAudioUrl","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","push","data","onstop","Blob","type","URL","createObjectURL","start","err","console","error","stopRecording","stop","getTracks","forEach","track","sendAudioToServer","formData","FormData","append","response","fetch","method","body","ok","Error","result","json","log","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/aayza/OneDrive/Рабочий стол/diplom/front/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\n\nfunction AudioRecorder() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [audioUrl, setAudioUrl] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorderRef.current = new MediaRecorder(stream);\n      \n      mediaRecorderRef.current.ondataavailable = (event) => {\n        audioChunksRef.current.push(event.data);\n      };\n      \n      mediaRecorderRef.current.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        setAudioBlob(audioBlob);\n        setAudioUrl(URL.createObjectURL(audioBlob));\n        audioChunksRef.current = [];\n      };\n      \n      mediaRecorderRef.current.start();\n      setIsRecording(true);\n    } catch (err) {\n      console.error('Error accessing microphone:', err);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n\n  const sendAudioToServer = async () => {\n    if (!audioBlob) return;\n    \n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n    \n    try {\n      const response = await fetch('http://localhost:8000/api/upload-audio', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('Server response was not OK');\n      }\n      \n      const result = await response.json();\n      console.log('Success:', result);\n      alert('Audio sent successfully!');\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Failed to send audio');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Audio Chat</h1>\n      <div>\n        {!isRecording ? (\n          <button onClick={startRecording}>Start Recording</button>\n        ) : (\n          <button onClick={stopRecording}>Stop Recording</button>\n        )}\n      </div>\n      \n      {audioUrl && (\n        <div>\n          <audio controls src={audioUrl} />\n          <button onClick={sendAudioToServer}>Send Audio</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}